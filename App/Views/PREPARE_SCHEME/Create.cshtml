@model Langben.DAL.PREPARE_SCHEME

@{
    Layout = "~/Views/Shared/Create.cshtml";
}
@using Common
@using Models
 
@section CurentPlace {
 
      创建  
 
 }
@using (Html.BeginForm("", "api/PREPARE_SCHEMEApi/Post"))
{
    <fieldset>
        <legend>
            <input class="a2 f2" type="submit" value="创建" />
            <input class="a2 f2" type="button" onclick="BackList('PREPARE_SCHEME')" value="返回" />
        </legend>
        <div class="bigdiv">
                 
            <div class="editor-label">
                @Html.LabelFor(model => model.REPORT_CATEGORY)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.REPORT_CATEGORY)
                @Html.ValidationMessageFor(model => model.REPORT_CATEGORY)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CERTIFICATE_CATEGORY)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CERTIFICATE_CATEGORY)
                @Html.ValidationMessageFor(model => model.CERTIFICATE_CATEGORY)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CNAS)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CNAS)
                @Html.ValidationMessageFor(model => model.CNAS)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CONTROL_NUMBER)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CONTROL_NUMBER)
                @Html.ValidationMessageFor(model => model.CONTROL_NUMBER)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CERTIFICATION_AUTHORITY)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CERTIFICATION_AUTHORITY)
                @Html.ValidationMessageFor(model => model.CERTIFICATION_AUTHORITY)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.QUALIFICATIONS)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.QUALIFICATIONS)
                @Html.ValidationMessageFor(model => model.QUALIFICATIONS)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.TEMPERATURE)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.TEMPERATURE)
                @Html.ValidationMessageFor(model => model.TEMPERATURE)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.HUMIDITY)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.HUMIDITY)
                @Html.ValidationMessageFor(model => model.HUMIDITY)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CHECK_PLACE)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CHECK_PLACE)
                @Html.ValidationMessageFor(model => model.CHECK_PLACE)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CHECKERID)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CHECKERID)
                @Html.ValidationMessageFor(model => model.CHECKERID)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.DETECTERID)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DETECTERID)
                @Html.ValidationMessageFor(model => model.DETECTERID)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.APPROVALID)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.APPROVALID)
                @Html.ValidationMessageFor(model => model.APPROVALID)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CALIBRATION_DATE)：
            </div>
            <div class="editor-field">
                @Html.TextBox("CALIBRATION_DATE", ((Model != null && Model.CALIBRATION_DATE != null) ? Model.CALIBRATION_DATE.ToString().AsDateTime().ToString("yyyy-MM-dd") : ""), new { style = "width: 244px;", @class="easyui-datebox" })
                @Html.ValidationMessageFor(model => model.CALIBRATION_DATE)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CONCLUSION)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CONCLUSION)
                @Html.ValidationMessageFor(model => model.CONCLUSION)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CONCLUSION_EXPLAIN)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CONCLUSION_EXPLAIN)
                @Html.ValidationMessageFor(model => model.CONCLUSION_EXPLAIN)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.VALIDITY_PERIOD)：
            </div>
            <div class="editor-field">
                @Html.TextBox("VALIDITY_PERIOD", ((Model != null && Model.VALIDITY_PERIOD != null) ? Model.VALIDITY_PERIOD.ToString().AsDateTime().ToString("yyyy-MM-dd") : ""), new { style = "width: 244px;", @class="easyui-datebox" })
                @Html.ValidationMessageFor(model => model.VALIDITY_PERIOD)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CALIBRATION_INSTRUCTIONS)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CALIBRATION_INSTRUCTIONS)
                @Html.ValidationMessageFor(model => model.CALIBRATION_INSTRUCTIONS)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.ACCURACY_GRADE)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ACCURACY_GRADE)
                @Html.ValidationMessageFor(model => model.ACCURACY_GRADE)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.RATED_FREQUENCY)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.RATED_FREQUENCY)
                @Html.ValidationMessageFor(model => model.RATED_FREQUENCY)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.PULSE_CONSTANT)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.PULSE_CONSTANT)
                @Html.ValidationMessageFor(model => model.PULSE_CONSTANT)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.EXTERNAL_RESITANCE_VALUE)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.EXTERNAL_RESITANCE_VALUE)
                @Html.ValidationMessageFor(model => model.EXTERNAL_RESITANCE_VALUE)
            </div>
        <div class="editor-label">
            <a class="anUnderLine" onclick="showModalOnly('SCHEMEID','../../SCHEME');">
                @Html.LabelFor(model => model.SCHEMEID) 
            </a>：
        </div>
        <div class="editor-field">
            <div id="checkSCHEMEID">            
            </div>
            @Html.HiddenFor(model => model.SCHEMEID)
        </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.CREATEPERSON)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CREATEPERSON)
                @Html.ValidationMessageFor(model => model.CREATEPERSON)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.UPDATEPERSON)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.UPDATEPERSON)
                @Html.ValidationMessageFor(model => model.UPDATEPERSON)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.AUDITOPINION)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AUDITOPINION)
                @Html.ValidationMessageFor(model => model.AUDITOPINION)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.AUDITTIME)：
            </div>
            <div class="editor-field">
                @Html.TextBox("AUDITTIME", ((Model != null && Model.AUDITTIME != null) ? Model.AUDITTIME.ToString().AsDateTime().ToString("yyyy-MM-dd") : ""), new { style = "width: 244px;", @class="easyui-datebox" })
                @Html.ValidationMessageFor(model => model.AUDITTIME)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.AUDITTEPERSON)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AUDITTEPERSON)
                @Html.ValidationMessageFor(model => model.AUDITTEPERSON)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.ISAGGREY)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ISAGGREY)
                @Html.ValidationMessageFor(model => model.ISAGGREY)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.APPROVAL)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.APPROVAL)
                @Html.ValidationMessageFor(model => model.APPROVAL)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.APPROVALDATE)：
            </div>
            <div class="editor-field">
                @Html.TextBox("APPROVALDATE", ((Model != null && Model.APPROVALDATE != null) ? Model.APPROVALDATE.ToString().AsDateTime().ToString("yyyy-MM-dd") : ""), new { style = "width: 244px;", @class="easyui-datebox" })
                @Html.ValidationMessageFor(model => model.APPROVALDATE)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.APPROVALEPERSON)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.APPROVALEPERSON)
                @Html.ValidationMessageFor(model => model.APPROVALEPERSON)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.APPROVALISAGGREY)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.APPROVALISAGGREY)
                @Html.ValidationMessageFor(model => model.APPROVALISAGGREY)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.PRINTSTATUS)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.PRINTSTATUS)
                @Html.ValidationMessageFor(model => model.PRINTSTATUS)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.ISBACK)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ISBACK)
                @Html.ValidationMessageFor(model => model.ISBACK)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.REPORTNUMBER)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.REPORTNUMBER)
                @Html.ValidationMessageFor(model => model.REPORTNUMBER)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.REPORTSTATUS)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.REPORTSTATUS)
                @Html.ValidationMessageFor(model => model.REPORTSTATUS)
            </div>   <div class="editor-label">
            <a class="anUnderLine" onclick="showModalMany('METERING_STANDARD_DEVICEID','../../METERING_STANDARD_DEVICE');">
                @Html.LabelFor(model => model.METERING_STANDARD_DEVICEID) 
            </a>：
        </div>
        <div class="editor-field">
            <div id="checkMETERING_STANDARD_DEVICEID">
                
                @if (Model != null && !string.IsNullOrWhiteSpace(Model.METERING_STANDARD_DEVICEID))
                {
                   foreach (var item40 in Model.METERING_STANDARD_DEVICEID.Split('^'))
                   {
                        string[] it = item40.Split('&');
                        if (it != null && it.Length == 2 && !string.IsNullOrWhiteSpace(it[0]) && !string.IsNullOrWhiteSpace(it[1]))
                        {                        
                
                <table id="@item40"
                    class="deleteStyle">
                    <tr>
                        <td>
                            <img  alt="删除" title="点击删除" onclick="deleteTable('@item40','METERING_STANDARD_DEVICEID');"  src="../../../Images/deleteimge.png" />
                        </td>
                        <td>
                            @it[1] 
                        </td>
                    </tr>
                </table>
                 }}} 
              @Html.HiddenFor(model => model.METERING_STANDARD_DEVICEID) 
            </div>
        </div>
        </div>
    </fieldset>
} 


    
    <script type="text/javascript">

        $(function () {
            
        });
              

    </script>


