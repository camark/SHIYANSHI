@model Langben.DAL.PROJECTTEMPLET
@{
    Layout = "~/Views/Shared/TempleOnly.cshtml";
    ViewBag.title = "交流电压（电流）测量-相对误差-单相(多通道）";
}
@using Common
@using Models
<thead>
    <!--表头-->
    <tr>
        <th align="center" width="140">量程</th>
        <th width="140" align="center"> 显示值</th>
        <th width="140" align="center">赫兹(Hz)</th>
        <th width="140" align="center">标准值</th>
        <th width="140" align="center">相对误差</th>
        <th align="center">
            校准结果的不确定度<br>
            U(K = <select class="my-combobox" name="state">
                <option value="">2 </option>
                <option value="">3</option>
                <option value="">√3</option>


            </select>)
        </th>
    </tr>

</thead>

<tbody id="tbody_moban">
    <!--表体-->
    <!--插入行的位置-->
</tbody>

<tfoot>
    <!--表尾-->
    <tr>
        <td colspan="7">
            <input type="hidden" id="hideLiangChengShuLiang" value="0" /> <!--默认量程是0-->
            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="plain:true,iconCls:'icon-add'" id="btnAddLiangCheng">增加量程</a>

        </td>
    </tr>
</tfoot>
@section JS {
    <script type="text/javascript" language="javascript">
        //一个量程的需要这个方法
        //重写set方法，只准对增加空白行
        function set(tbodyIndex) {

            $('#dlg').dialog('open');//打开弹出框

            $("#hideDangQianTongDao").val(tbodyIndex);

        }
        //增加行
        function CreateRow() {

            var hideDangQianTongDao = $("#hideDangQianTongDao").val();//当前操作第几通道
            var LiangChengShuLiang = $("#tongdao_" + hideDangQianTongDao).find("#hideLiangChengShuLiang").val();//某个通道量程数量
            LiangChengShuLiang++;

            var rowspanIdx = $("#txtPoint").val();     //检测点数
            txtNumber = $("#txtNumber").val(); //小数点位数
            var standardValue = "";
            var htmlString = [];
            var rowLength = $("#tbody_" + hideDangQianTongDao + " tr").length;//行号

            var lianChengID = hideDangQianTongDao + "_" + LiangChengShuLiang;//例如：第几个通道_第几个量程

            var temp = 30;
            for (var rowidx = 0; rowidx < rowspanIdx; rowidx++) {
                rowLength++;
                htmlString.push("<tr rowindex='" + rowLength + "'>");

                var rowspan = 1; //合并单元格行数

                if ((rowspanIdx == 3 || rowspanIdx == 5 || rowspanIdx == 10))
                    standardValue = calculate(rowspanIdx)[rowidx];


                var txtVal = "";//(文本框值)，如果有值并且行号为null直接赋值，否则走自动计算


                var HangHaoID = lianChengID + "_" + rowLength;//量程ID_第几行

                //计算默认值

                if (rowidx == 0) {
                    //需要合并的列 //量程

                    htmlString.push(SetTDHtml(rowspanIdx, "READVALUE", HangHaoID, rowidx, $("#txtLiangCheng").val(), ""));

                }

                //需要合并的列
                var changerHTML = "onblur=''";

                //标准输出值 增加下拉框单位V
                htmlString.push(SetTDHtml(rowspan, "ACTUALVALUE", HangHaoID, rowidx, (standardValue == "" ? "" : standardValue.ShowData), "classstyle100"));

                //赫兹 增加下拉框单位赫兹
                htmlString.push(SetTDHtml(rowspan, "HZMY", HangHaoID, rowidx,'', "classstyle100"));

                //显示值  增加下拉框单位V
                htmlString.push(SetTDHtml(rowspan, "SHIJISHUCHUZHI", HangHaoID, rowidx, '', "classstyle100"));
                //相对误差
                htmlString.push(SetTDHtml(rowspan, "RELATIVEERROR", HangHaoID, rowidx, '', "classstyle100"));


                //校准结果的不确定度 U(K =
                htmlString.push(SetTDHtml(rowspan, "UNCERTAINTYDEGREE", HangHaoID, rowidx, txtVal, "classstyle"));
                htmlString.push("</tr>");
            }
            htmlString = htmlString.join("");

            var tagRow = $("#tongdao_" + hideDangQianTongDao).find("#tbody_" + hideDangQianTongDao).append(htmlString);
            $.parser.parse(tagRow);//渲染easyui组建
            $('#dlg').window('close');//关闭弹出框
            $("#tongdao_" + hideDangQianTongDao).find("#tbody_" + hideDangQianTongDao).find("#hideLiangChengShuLiang").val(LiangChengShuLiang);
        }
        ///计算标准值
        function calculate(point) {

            var txtNumber = $("#txtLiangCheng").val(); //量程
            pointLen = $("#txtNumber").val(); //小数点位数
            var arry = new Array();
            var showData = (txtNumber * 1).toFixed(pointLen);
            var biaoZhunData = (txtNumber * 1).toFixed(pointLen);
            var xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
            if (point == 3) {
                //输入的检测点是3的时候，按照量程*100%，量程*60%，量程*10%作为默认标准值显示
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.6).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.6).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.1).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.1).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });
            }
            if (point == 5) {
                //输入的检测点是5的时候，按照量程*100%，量程*80%，量程*60%，量程*40%，量程*20%作为默认标准值显示
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.8).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.8).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.6).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.6).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });


                showData = (txtNumber * 0.4).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.4).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.2).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.2).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });
            }
            if (point == 10) {
                //输入的检测点是10的时候，按照量程*100%，量程*90%，量程*80%，量程*70%，量程*60%，量程*50%，量程*40%，量程*30%，量程*20%，量程*10%，作为默认标准值显示
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });
                showData = (txtNumber * 0.9).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.9).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.8).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.8).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.7).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.7).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.6).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.6).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.5).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.5).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.4).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.4).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.3).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.3).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.2).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.2).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });

                showData = (txtNumber * 0.1).toFixed(pointLen);
                biaoZhunData = (txtNumber * 0.1).toFixed(pointLen);
                xiangDuiWuCha = ((showData - biaoZhunData) / biaoZhunData * 100).toFixed(pointLen);
                arry.push({ "ShowData": showData, "BiaoZhunData": biaoZhunData, "XiangDuiWuCha": xiangDuiWuCha });
            }

            return arry;
        }

        function changeValue(obj) {
            //debugger;
            //取出当前行
            //var name = $(obj).attr("name");
            //var last = name.charAt(id.length - 2)
            //txtNumber = $("#txtNumber").val(); //小数点位数
            //var tr = $(obj).parent().parent();
            //var shwoData = $(tr).find('td').find('input[name="XIANSHIZHIER"]').find('input').val();
            //var biaoZhunValue = $(tr).find('td').eq(2).find('input').val();
            //var wuCha = (shwoData - biaoZhunValue).toFixed(txtNumber);
            ////XIANSHIZHIER
            //$(tr).find('td').eq(3).find('input').val(wuCha);
            //  (tr).find('td').eq(1).find('input').val(parseFloat(shwoData).toFixed(txtNumber))
        }
        //离开事件，用于计算
        function blurValue(obj) {

            //   LianDongShiJiZhi(obj);
        }
        //联动标准值
        //输出实际值计算：【选用电阻阻值】有数值时，输出实际值= 读数值 / 选用电阻阻值；【选用电阻阻值】没有数值时，输出实际值=读数值
        function LianDongShiJiZhi(obj) {

            if (obj.name == "RESISTANCE" && obj.value.trim() != "")//选用电阻阻值变更
            {

                id = obj.id.replace(obj.name, "") + "_";
                $("input[name=READVALUE]").each(function (a, b) {//读数值
                    if (b.id.indexOf(id) >= 0 && b.value.trim() != "") {
                        var hhID = b.id.replace(b.name, "");//行号
                        var shijizhiID = "#ACTUALVALUE" + hhID;//输出实际值ID
                        $(shijizhiID).val(CalculateShiJiZhi(obj.value.trim(), b.value.trim()));
                    }
                });
            }
            else if (obj.name == "READVALUE")//读数值
            {
                var DZID = obj.id.replace(obj.name, "");
                DZID = DZID.substr(0, DZID.lastIndexOf("_"));
                var hhID = obj.id.replace(obj.name, "");//行号
                var shijizhiID = "#ACTUALVALUE" + hhID;//输出实际值ID
                var DianZuID = "#RESISTANCE" + DZID;//电阻ID
                $(shijizhiID).val(CalculateShiJiZhi($(DianZuID).val(), obj.value.trim()));
            }
        }
        //计算输出实际值
        function CalculateShiJiZhi(DianZu, DuShuZhi) {
            if (DianZu == "" || DuShuZhi == "") {//【选用电阻阻值】没有数值时，输出实际值=读数值
                return DuShuZhi;
            }
            else if (DianZu.trim() == "0") {
                return "";
            }
            else//【选用电阻阻值】有数值时，输出实际值= 读数值 / 选用电阻阻值
            {
                var value = parseFloat(DuShuZhi.trim()) / parseFloat(DianZu.trim());
                return value;
            }
        }


    </script>


}
@section TanKuang {
    <!--弹框的位置-->
    <!--增加量程弹层-->
    <div id="dlg" class="easyui-dialog" title="设置检测点" closed="true" data-options="buttons: [{
					text:'确定',
					iconCls:'icon-ok',
					handler:function(){
					  return CreateRow()
					}
				},{
					text:'取消',
					handler:function(){
                    $('#dlg').window('close');
         }
         }]" style="width:400px;height:200px;padding:10px">
        <table>
            <tr>
                <td width="80" align="right">量程值：</td>
                <td><input type="text" id="txtLiangCheng" class="my-textbox  required digits" style="width:200px" /></td>
            </tr>
            <tr>
                <td align="right">检测点数：</td>
                <td><input type="text" id="txtPoint" class="my-textbox  required digits" style="width:200px" /></td>
            </tr>
            <tr>
                <td align="right">小数点位数：</td>
                <td><input type="text" id="txtNumber" class="my-textbox  required digits" style="width:200px" /></td>
            </tr>
        </table>
    </div>
    <!--/增加量程弹层-->
}


