@model Langben.DAL.TRANSMITTER_POWER_FACTOR

@{
    Layout = "~/Views/Shared/Edit.cshtml";
}
@using Common
@using Models
 @section CurentPlace {
    修改  
}

@using (Html.BeginForm("", "api/TRANSMITTER_POWER_FACTORApi/Put"))
{
    <fieldset>
        <legend>
            <input class="a2 f2" type="submit" value="修改" />
            <input class="a2 f2" type="button" onclick="BackList('TRANSMITTER_POWER_FACTOR')" value="返回列表" />
        </legend>
        <div class="bigdiv">
            @Html.HiddenFor(model => model.ID )      
            <div class="editor-label">
                @Html.LabelFor(model => model.TEST_QUANTITY)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.TEST_QUANTITY)
                @Html.ValidationMessageFor(model => model.TEST_QUANTITY)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.GRADE)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.GRADE)
                @Html.ValidationMessageFor(model => model.GRADE)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.TEST_POINT)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.TEST_POINT)
                @Html.ValidationMessageFor(model => model.TEST_POINT)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.TEST_POINT_UNIT)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.TEST_POINT_UNIT)
                @Html.ValidationMessageFor(model => model.TEST_POINT_UNIT)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.U)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.U)
                @Html.ValidationMessageFor(model => model.U)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.U_UNIT)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.U_UNIT)
                @Html.ValidationMessageFor(model => model.U_UNIT)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.A)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.A)
                @Html.ValidationMessageFor(model => model.A)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.A_UNIT)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.A_UNIT)
                @Html.ValidationMessageFor(model => model.A_UNIT)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.TWO_INPUT_STANDARD_VALUES)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.TWO_INPUT_STANDARD_VALUES)
                @Html.ValidationMessageFor(model => model.TWO_INPUT_STANDARD_VALUES)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.TWO_INPUT_STANDARD_VALUES_UNIT)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.TWO_INPUT_STANDARD_VALUES_UNIT)
                @Html.ValidationMessageFor(model => model.TWO_INPUT_STANDARD_VALUES_UNIT)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.STANDARD_OUTPUT_VALUE)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.STANDARD_OUTPUT_VALUE)
                @Html.ValidationMessageFor(model => model.STANDARD_OUTPUT_VALUE)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.STANDARD_OUTPUT_VALUE_UNIT)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.STANDARD_OUTPUT_VALUE_UNIT)
                @Html.ValidationMessageFor(model => model.STANDARD_OUTPUT_VALUE_UNIT)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.ACTUAL_OUTPUT_VALUE)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ACTUAL_OUTPUT_VALUE)
                @Html.ValidationMessageFor(model => model.ACTUAL_OUTPUT_VALUE)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.ACTUAL_OUTPUT_VALUE_UNIT)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ACTUAL_OUTPUT_VALUE_UNIT)
                @Html.ValidationMessageFor(model => model.ACTUAL_OUTPUT_VALUE_UNIT)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.REFERENCE_ERROR)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.REFERENCE_ERROR)
                @Html.ValidationMessageFor(model => model.REFERENCE_ERROR)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.REFERENCE_ERROR_UNIT)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.REFERENCE_ERROR_UNIT)
                @Html.ValidationMessageFor(model => model.REFERENCE_ERROR_UNIT)
            </div>      
            <div class="editor-label">
                <a class="anUnderLine" onclick="showModalOnly('TRANSMITTER_HEADID','../../TRANSMITTER_HEAD');">
                    @Html.LabelFor(model => model.TRANSMITTER_HEADID) 
                </a>：
            </div>
            <div class="editor-field">
                <div id="checkTRANSMITTER_HEADID">
                        @if(Model!=null)
                        {
                        if (null != Model.TRANSMITTER_HEADID)                      
                        { 
                    <table id="@Model.TRANSMITTER_HEADID"
                        class="deleteStyle">
                        <tr>
                            <td>
                                <img alt="删除"  title="点击删除" onclick="deleteTable('@Model.TRANSMITTER_HEADID ','TRANSMITTER_HEADID');" src="../../../Images/deleteimge.png" />
                            </td>
                            <td>
                                @Model.TRANSMITTER_HEAD.类型
                            </td>
                        </tr>
                    </table>
                    }} 
                </div>
                @Html.HiddenFor(model => model.TRANSMITTER_HEADID)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.PREPARE_SCHEMEID)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.PREPARE_SCHEMEID)
                @Html.ValidationMessageFor(model => model.PREPARE_SCHEMEID)
            </div>@Html.HiddenFor(model => model.CREATETIME )      
            <div class="editor-label">
                @Html.LabelFor(model => model.CREATEPERSON)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CREATEPERSON)
                @Html.ValidationMessageFor(model => model.CREATEPERSON)
            </div>     
            <div class="editor-label">
                @Html.LabelFor(model => model.UPDATEPERSON)：
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.UPDATEPERSON)
                @Html.ValidationMessageFor(model => model.UPDATEPERSON)
            </div>
        </div>
    </fieldset>
}



    <script type="text/javascript">

        $(function () {
            

            // 获取待编辑内容并显示
            var id = '@ViewBag.Id';
            $.ajax({
                url: "/api/TRANSMITTER_POWER_FACTORApi/" + id,
                type: "POST",
                // async: false,
                success: function (res) {
                    $("#ID").val(res.ID);$("#TEST_QUANTITY").val(res.TEST_QUANTITY);$("#GRADE").val(res.GRADE);$("#TEST_POINT").val(res.TEST_POINT);$("#TEST_POINT_UNIT").val(res.TEST_POINT_UNIT);$("#U").val(res.U);$("#U_UNIT").val(res.U_UNIT);$("#A").val(res.A);$("#A_UNIT").val(res.A_UNIT);$("#TWO_INPUT_STANDARD_VALUES").val(res.TWO_INPUT_STANDARD_VALUES);$("#TWO_INPUT_STANDARD_VALUES_UNIT").val(res.TWO_INPUT_STANDARD_VALUES_UNIT);$("#STANDARD_OUTPUT_VALUE").val(res.STANDARD_OUTPUT_VALUE);$("#STANDARD_OUTPUT_VALUE_UNIT").val(res.STANDARD_OUTPUT_VALUE_UNIT);$("#ACTUAL_OUTPUT_VALUE").val(res.ACTUAL_OUTPUT_VALUE);$("#ACTUAL_OUTPUT_VALUE_UNIT").val(res.ACTUAL_OUTPUT_VALUE_UNIT);$("#REFERENCE_ERROR").val(res.REFERENCE_ERROR);$("#REFERENCE_ERROR_UNIT").val(res.REFERENCE_ERROR_UNIT);$("#PREPARE_SCHEMEID").val(res.PREPARE_SCHEMEID);$("#CREATETIME").val(res.CREATETIME);$("#CREATEPERSON").val(res.CREATEPERSON);$("#UPDATEPERSON").val(res.UPDATEPERSON);
                }
            })
        });
        

    </script>



