@model Langben.DAL.ORDER_TASK_INFORMATION

@{
    Layout = "~/Views/Shared/Details.cshtml";
}
@using Common
 @section CurentPlace {
    详细  
}
<script type="text/javascript">
    $(function () {

        //出厂编号
        $('#FACTORY_NUM').combobox({
            mode: 'remote',
            loader: function (param, success, error) {
                //获取输入的值
                var q = param.q || "";
                //此处q的length代表输入多少个字符后开始查询
                if (q.length <= 0) return false;
                $.ajax({
                    url: "../Appliance/SearchAutoComplete/FACTORY_NUM",
                    type: "post",
                    data: {
                        //传值，还是JSON数据
                        term: q
                    },
                    //重要，如果写jsonp会报转换错误，此处不写都可以
                    dataType: "json",
                    success: function (data) {
                        //关键步骤，遍历一个MAP对象
                        var items = $.map(data, function (item) {

                            return {
                                id: item.id
                                ,
                                name: item.value
                                ,
                                show: item.label
                            };
                        });
                        //执行loader的success方法
                        success(items);
                    },
                    //异常处理
                    error: function (xml, text, msg) {
                        error.apply(this, arguments);
                    }
                });
            },
            valueField: 'id',
            textField: 'name',
            onSelect: function (rec) {

                var BAR_CODE_NUM = rec.show.split(',')[0];
                var FACTORY_NUM = rec.show.split(',')[1];
                var VERSION = rec.show.split(',')[2];
                var APPLIANCE_NAME = rec.show.split(',')[3];
                $('#BAR_CODE_NUM').val(BAR_CODE_NUM);
                //$('#FACTORY_NUM').combobox('clear');
                //$('#FACTORY_NUM').combobox('setValue', FACTORY_NUM);
                $('#VERSION').combobox('clear');
                $('#VERSION').combobox('setValue', VERSION);
                $('#APPLIANCE_NAME').combobox('clear');
                $('#APPLIANCE_NAME').combobox('setValue', APPLIANCE_NAME);
            },
            formatter: function (row) {
                return row.show;
            }

        });
        //型号
        $('#VERSION').combobox({
            mode: 'remote',
            loader: function (param, success, error) {
                //获取输入的值
                var q = param.q || "";
                //此处q的length代表输入多少个字符后开始查询
                if (q.length <= 0) return false;
                $.ajax({
                    url: "../Appliance/SearchAutoComplete/VERSION",
                    type: "post",
                    data: {
                        //传值，还是JSON数据
                        term: q
                    },
                    //重要，如果写jsonp会报转换错误，此处不写都可以
                    dataType: "json",
                    success: function (data) {
                        //关键步骤，遍历一个MAP对象
                        var items = $.map(data, function (item) {

                            return {
                                id: item.id
                                ,
                                name: item.value
                                ,
                                show: item.label
                            };
                        });
                        //执行loader的success方法
                        success(items);
                    },
                    //异常处理
                    error: function (xml, text, msg) {
                        error.apply(this, arguments);
                    }
                });
            },
            valueField: 'id',
            textField: 'name',
            onSelect: function (rec) {
                var BAR_CODE_NUM = rec.show.split(',')[0];
                var FACTORY_NUM = rec.show.split(',')[1];
                var VERSION = rec.show.split(',')[2];
                var APPLIANCE_NAME = rec.show.split(',')[3];
                $('#BAR_CODE_NUM').val(BAR_CODE_NUM);
                $('#FACTORY_NUM').combobox('clear');
                $('#FACTORY_NUM').combobox('setValue', FACTORY_NUM);
                //$('#VERSION').combobox('clear');
                //$('#VERSION').combobox('setValue', VERSION);
                $('#APPLIANCE_NAME').combobox('clear');
                $('#APPLIANCE_NAME').combobox('setValue', APPLIANCE_NAME);
            },
            formatter: function (row) {
                return row.show;
            }
        });
        //器具名称
        $('#APPLIANCE_NAME').combobox({
            mode: 'remote',
            loader: function (param, success, error) {
                //获取输入的值
                var q = param.q || "";
                //此处q的length代表输入多少个字符后开始查询
                if (q.length <= 0) return false;
                $.ajax({
                    url: "../Appliance/SearchAutoComplete/APPLIANCE_NAME",
                    type: "post",
                    data: {
                        //传值，还是JSON数据
                        term: q
                    },
                    //重要，如果写jsonp会报转换错误，此处不写都可以
                    dataType: "json",
                    success: function (data) {
                        //关键步骤，遍历一个MAP对象
                        var items = $.map(data, function (item) {

                            return {
                                id: item.id
                                ,
                                name: item.value
                                ,
                                show: item.label
                            };
                        });
                        //执行loader的success方法
                        success(items);
                    },
                    //异常处理
                    error: function (xml, text, msg) {
                        error.apply(this, arguments);
                    }
                });
            },
            valueField: 'id',
            textField: 'name',
            onSelect: function (rec) {
                var BAR_CODE_NUM = rec.show.split(',')[0];
                var FACTORY_NUM = rec.show.split(',')[1];
                var VERSION = rec.show.split(',')[2];
                var APPLIANCE_NAME = rec.show.split(',')[3];
                $('#BAR_CODE_NUM').val(BAR_CODE_NUM);
                $('#FACTORY_NUM').combobox('clear');
                $('#FACTORY_NUM').combobox('setValue', FACTORY_NUM);
                $('#VERSION').combobox('clear');
                $('#VERSION').combobox('setValue', VERSION);
                //$('#APPLIANCE_NAME').combobox('clear');
                //$('#APPLIANCE_NAME').combobox('setValue', APPLIANCE_NAME);
            },
            formatter: function (row) {
                return row.show;
            }
        });
    })
</script><br style="clear:both;" />
<script type="text/javascript">
    //数据验证
    function ifshuju(entity) {
        var zhi = "";
        if (isNull(entity.ACCEPT_ORGNIZATION)) {
            zhi += "受理单位不能为空！<br>";
        }
        if (isNull(entity.CERTIFICATE_ENTERPRISE)) {
            zhi += "证书单位不能为空！<br>";
        }
        if (isNull(entity.CERTIFICATE_ENTERPRISE_ADDRESS)) {
            zhi += "证书单位地址不能为空！<br>";
        }
        if (isNull(entity.CONTACTS2)) {
            zhi += "联系人2不能为空！<br>";
        }
        if (isNull(entity.CONTACT_PHONE2)) {
            zhi += "联系电话2不能为空！<br>";
        }
        else {
            if (!checkPhone(entity.CONTACT_PHONE2)) {
                zhi += "联系电话2格式不对！<br>";
            }
        }
        if (!isNull(entity.CONTACT_PHONE)) {
            if (!checkPhone(entity.CONTACT_PHONE)) {
                zhi += "联系电话格式不对！<br>";
            }
        }
        if (!isNull(entity.INSPECTION_ENTERPRISE_POST)) {
            if (!isPOST(entity.INSPECTION_ENTERPRISE_POST)) {
                zhi += "送检单位邮政编码格式不对！<br>";
            }
        }
        if (!isNull(entity.CERTIFICATE_ENTERPRISE_POST)) {
            if (!isPOST(entity.CERTIFICATE_ENTERPRISE_POST)) {
                zhi += "证书单位邮政编码格式不对！<br>";
            }
        }
        if (!isNull(entity.FAX)) {
            if (!isFAX(entity.FAX)) {
                zhi += "传真格式不对！<br>";
            }
        }
        if (!isNull(entity.FAX2)) {
            if (!isFAX(entity.FAX2)) {
                zhi += "传真2格式不对！<br>";
            }
        }
        if (entity.APPLIANCE_DETAIL_INFORMATION.length >= 1) {
            for (var i = 0; i < entity.APPLIANCE_DETAIL_INFORMATION.length; i++) {
                if (entity.APPLIANCE_DETAIL_INFORMATION[i].APPLIANCE_NAME == "undefined" || entity.APPLIANCE_DETAIL_INFORMATION[i].VERSION == "undefined"
                    || entity.APPLIANCE_DETAIL_INFORMATION[i].NUM == "undefined" || entity.APPLIANCE_DETAIL_INFORMATION[i].APPEARANCE_STATUS == "undefined" || entity.APPLIANCE_DETAIL_INFORMATION[i].UNDERTAKE_LABORATORYID == "undefined") {
                    zhi += "器具数据有误！<br>";
                    break;
                }
                if (isNull(entity.APPLIANCE_DETAIL_INFORMATION[i].APPLIANCE_NAME)) {
                    zhi += "器具名称不能为空！<br>";
                }
                if (isNull(entity.APPLIANCE_DETAIL_INFORMATION[i].VERSION)) {
                    zhi += "型号不能为空！<br>";
                }
                if (isNull(entity.APPLIANCE_DETAIL_INFORMATION[i].NUM)) {
                    zhi += "数量不能为空！<br>";
                }
                else {
                    if (!isNumber(entity.APPLIANCE_DETAIL_INFORMATION[i].NUM)) {
                        zhi += "数量必须为数字整型！<br>";
                    }
                }
                if (isNull(entity.APPLIANCE_DETAIL_INFORMATION[i].APPEARANCE_STATUS)) {
                    zhi += "外观状态不能为空！<br>";
                }
                if (isNull(entity.APPLIANCE_DETAIL_INFORMATION[i].UNDERTAKE_LABORATORYID)) {
                    zhi += "实验室不能为空！<br>";
                }
            }
        }
        else {
            zhi += "器具数据不能为空！<br>";
        }

        if (zhi != "") {
            $.messager.alert('操作提示', "" + zhi + "", 'info');
            return false;
        }
        else {
            //return false;
            return true;
        }

    }
    /*
用途：检查输入字符串是否为空或者全部都是空格
输入：str
返回：
如果全是空返回true,否则返回false
*/
    function isNull(str) {
        if (str == "") return true;
        var regu = "^[ ]+$";
        var re = new RegExp(regu);
        return re.test(str);
    }
    /*
用途：检查输入字符串是否满足邮政编码格式
输入：str
返回：
如果全是空返回true,否则返回false
*/
    function isPOST(str) {
        var regu = /^[1-9][0-9]{5}$/;
        //var re = new RegExp(regu);
        return regu.test(str);
    }
    /*
用途：检查输入字符串是否满足传真格式
输入：str
返回：
如果全是空返回true,否则返回false
*/
    function isFAX(str) {
        var regu = /^[+]{0,1}(\d){1,3}[ ]?([-]?((\d)|[ ]){1,12})+$/;
        //var re = new RegExp(regu);
        return regu.test(str);
    }
    /*
   用途：检查输入的电话号码格式是否正确
   输入：
   strPhone：字符串
   返回：
   如果通过验证返回true,否则返回false
   */
    function checkPhone(strPhone) {
        var phoneRegWithArea = /^[1][3][0-9]{9}$/;
        var phoneRegNoArea = /^0\d{2,3}-?\d{7,8}$/;
        //var prompt = "您输入的电话号码不正确!"
        if (strPhone.length ==11) {
            if (phoneRegWithArea.test(strPhone)) {
                return true;
            } else {
                //alert( prompt );
                return false;
            }
        } else {
            if (phoneRegNoArea.test(strPhone)) {
                return true;
            } else {
                //alert(prompt);
                return false;
            }

        }
    }

    /*
用途：检查输入字符串是否符合正整数格式
输入：
s：字符串
返回：
如果通过验证返回true,否则返回false
*/
    function isNumber(s) {
        var regu = "^[0-9]+$";
        var re = new RegExp(regu);
        if (s.search(re) != -1) {
            return true;
        } else {
            return false;
        }
    }

</script>
 <script src="~/Scripts/jquery.edatagrid.js"></script>
    <fieldset>
        <legend>
            <input class="a2 f2" type="button" onclick="window.location.href = 'javascript:history.go(-1)';" value="返回" />
        </legend>
        <div class="bigdiv">
            <div>
                条形码：<input id="BAR_CODE_NUM" name="BAR_CODE_NUM" style="width:90px;" />
                出厂编号：<input id="FACTORY_NUM" name="FACTORY_NUM" style="width:200px;" />
                型号：<input id="VERSION" name="VERSION" style="width:150px;" />
                器具名称：<input id="APPLIANCE_NAME" name="APPLIANCE_NAME" style="width:150px;" />
                <a href="#" onclick="chaxun()" class="easyui-linkbutton" data-options="iconCls:'icon-search'">
                    查 询
                </a>
            </div>  
            <br style="clear:both;" />
            <br style="clear:both;" />
            <div class="bigdiv" style="width: 854px;" id="order">

                <div class="editor-label">
                    @Html.LabelFor(model => model.ACCEPT_ORGNIZATION)：
                </div>
                <div class="editor-field">
                    @Html.DropDownList("ACCEPT_ORGNIZATION", Models.SysFieldModels.GetSysField("Appliance", "ACCEPT_ORGNIZATION"), "请选择")
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.INSPECTION_ENTERPRISE)：
                </div>
                <div class="editor-field">
                    @Html.DropDownList("INSPECTION_ENTERPRISE", Models.COMPANYModels.GetCOMPANY("送检"), "请选择", new { @class = "easyui-combobox" })
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.INSPECTION_ENTERPRISE_ADDRESS)：
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.INSPECTION_ENTERPRISE_ADDRESS)
                    @Html.ValidationMessageFor(model => model.INSPECTION_ENTERPRISE_ADDRESS)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.INSPECTION_ENTERPRISE_POST)：
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.INSPECTION_ENTERPRISE_POST)
                    @Html.ValidationMessageFor(model => model.INSPECTION_ENTERPRISE_POST)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.CONTACTS)：
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.CONTACTS)
                    @Html.ValidationMessageFor(model => model.CONTACTS)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.CONTACT_PHONE)：
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.CONTACT_PHONE)
                    @Html.ValidationMessageFor(model => model.CONTACT_PHONE)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.FAX)：
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.FAX)
                    @Html.ValidationMessageFor(model => model.FAX)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.CERTIFICATE_ENTERPRISE)：
                </div>
                <div class="editor-field">
                    @Html.DropDownList("CERTIFICATE_ENTERPRISE", Models.COMPANYModels.GetCOMPANY("证书"), "请选择", new { @class = "easyui-combobox" })
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.CERTIFICATE_ENTERPRISE_ADDRESS)：
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.CERTIFICATE_ENTERPRISE_ADDRESS)
                    @Html.ValidationMessageFor(model => model.CERTIFICATE_ENTERPRISE_ADDRESS)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.CERTIFICATE_ENTERPRISE_POST)：
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.CERTIFICATE_ENTERPRISE_POST)
                    @Html.ValidationMessageFor(model => model.CERTIFICATE_ENTERPRISE_POST)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.CONTACTS2)：
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.CONTACTS2)
                    @Html.ValidationMessageFor(model => model.CONTACTS2)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.CONTACT_PHONE2)：
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.CONTACT_PHONE2)
                    @Html.ValidationMessageFor(model => model.CONTACT_PHONE2)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.FAX2)：
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.FAX2)
                    @Html.ValidationMessageFor(model => model.FAX2)
                </div>
                <br style="clear:both;" />
                <div class="editor-label">
                    @Html.LabelFor(model => model.CUSTOMER_SPECIFIC_REQUIREMENTS)：
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.CUSTOMER_SPECIFIC_REQUIREMENTS)
                    @Html.ValidationMessageFor(model => model.CUSTOMER_SPECIFIC_REQUIREMENTS)
                </div>

            </div>

            <br style="clear:both;" />
            <br style="clear:both;" />
            <br style="clear:both;" />
            <br style="clear:both;" />
            <br style="clear:both;" />
            <input type="hidden" id="ORDER_TASK_INFORMATIONID" />
            <table id="ApplianceDate" singleSelect="true"></table>
            <br style="clear:both;" />
        </div>
    </fieldset>

<script type="text/javascript">
    function chaxun() {
        var row = null;
        var search = "BAR_CODE_NUM" + "@@" + $('#BAR_CODE_NUM').val() + "^" + "FACTORY_NUM" + "@@" + $('#FACTORY_NUM').combobox('getText') + "^" + "VERSION" + "@@" + $('#VERSION').combobox('getText') + "^" + "APPLIANCE_NAME" + "@@" + $('#APPLIANCE_NAME').combobox('getText') + "^";
        $.ajax({
            url: '/api/ORDER_TASK_INFORMATIONApi/PostDataByID/' + search,
            type: "Post",
            // async: false,
            success: function (row) {
                //结束器具的编辑状态
                $('#ApplianceDate').edatagrid('saveRow');
                $('#ApplianceDate').edatagrid('appendRow', {
                    APPLIANCE_NAME: row.APPLIANCE_DETAIL_INFORMATIONShows[0].APPLIANCE_NAME,
                    VERSION: row.APPLIANCE_DETAIL_INFORMATIONShows[0].VERSION,
                    FORMAT: row.APPLIANCE_DETAIL_INFORMATIONShows[0].FORMAT,
                    FACTORY_NUM: row.APPLIANCE_DETAIL_INFORMATIONShows[0].FACTORY_NUM,
                    NUM: row.APPLIANCE_DETAIL_INFORMATIONShows[0].NUM,
                    ATTACHMENT: row.APPLIANCE_DETAIL_INFORMATIONShows[0].ATTACHMENT,
                    APPEARANCE_STATUS: row.APPLIANCE_DETAIL_INFORMATIONShows[0].APPEARANCE_STATUS,
                    MAKE_ORGANIZATION: row.APPLIANCE_DETAIL_INFORMATIONShows[0].MAKE_ORGANIZATION,
                    UNDERTAKE_LABORATORYID: row.APPLIANCE_DETAIL_INFORMATIONShows[0].UNDERTAKE_LABORATORYIDString,
                    APPLIANCE_RECIVE: row.APPLIANCE_DETAIL_INFORMATIONShows[0].APPLIANCE_RECIVE,
                    REMARKS: row.APPLIANCE_DETAIL_INFORMATIONShows[0].REMARKS,
                });
                var leng = $('#ApplianceDate').edatagrid('getRows');
                if (leng.length <= 1) {
                    $("#ACCEPT_ORGNIZATION").val(row.ACCEPT_ORGNIZATION);//受理单位
                    $("#INSPECTION_ENTERPRISE").combobox('select', row.INSPECTION_ENTERPRISE);//送检单位
                    $("#INSPECTION_ENTERPRISE_ADDRESS").val(row.INSPECTION_ENTERPRISE_ADDRESS);//送检单位地址
                    $("#INSPECTION_ENTERPRISE_POST").val(row.INSPECTION_ENTERPRISE_POST);//送检单位邮政编码
                    $("#CONTACTS").val(row.CONTACTS);//联系人
                    $("#CONTACT_PHONE").val(row.CONTACT_PHONE);//联系电话
                    $("#FAX").val(row.FAX);//传真
                    $("#CERTIFICATE_ENTERPRISE").combobox('select', row.CERTIFICATE_ENTERPRISE);//证书单位
                    $("#CERTIFICATE_ENTERPRISE_ADDRESS").val(row.CERTIFICATE_ENTERPRISE_ADDRESS);//证书单位地址
                    $("#CERTIFICATE_ENTERPRISE_POST").val(row.CERTIFICATE_ENTERPRISE_POST);//证书单位邮政编码
                    $("#CONTACTS2").val(row.CONTACTS2);//联系人2
                    $("#CONTACT_PHONE2").val(row.CONTACT_PHONE2);//联系电话2
                    $("#FAX2").val(row.FAX2);//传真2
                    $("#CUSTOMER_SPECIFIC_REQUIREMENTS").val(row.CUSTOMER_SPECIFIC_REQUIREMENTS);//客户特殊要求
                }
            }
        })
    };
    function seng() {
        var row = null;
        @*var search = "ID" + "@@" + '@ViewBag.Id' + "^";*@
        $.ajax({
            url: '/api/ORDER_TASK_INFORMATIONApi/PostID/' + '@ViewBag.Id',
            type: "Post",
            // async: false,
            success: function (row) {
                //结束器具的编辑状态
                $('#ApplianceDate').edatagrid('saveRow');
                for (var i = 0; i < row.APPLIANCE_DETAIL_INFORMATIONShows.length; i++) {
                    $('#ApplianceDate').edatagrid('appendRow', {
                        APPLIANCE_NAME: row.APPLIANCE_DETAIL_INFORMATIONShows[i].APPLIANCE_NAME,
                        VERSION: row.APPLIANCE_DETAIL_INFORMATIONShows[i].VERSION,
                        FORMAT: row.APPLIANCE_DETAIL_INFORMATIONShows[i].FORMAT,
                        FACTORY_NUM: row.APPLIANCE_DETAIL_INFORMATIONShows[i].FACTORY_NUM,
                        NUM: row.APPLIANCE_DETAIL_INFORMATIONShows[i].NUM,
                        ATTACHMENT: row.APPLIANCE_DETAIL_INFORMATIONShows[i].ATTACHMENT,
                        APPEARANCE_STATUS: row.APPLIANCE_DETAIL_INFORMATIONShows[i].APPEARANCE_STATUS,
                        MAKE_ORGANIZATION: row.APPLIANCE_DETAIL_INFORMATIONShows[i].MAKE_ORGANIZATION,
                        UNDERTAKE_LABORATORYID: row.APPLIANCE_DETAIL_INFORMATIONShows[i].UNDERTAKE_LABORATORYIDString,
                        APPLIANCE_RECIVE: row.APPLIANCE_DETAIL_INFORMATIONShows[i].APPLIANCE_RECIVE,
                        REMARKS: row.APPLIANCE_DETAIL_INFORMATIONShows[i].REMARKS,
                    });
                }              

                    $("#ACCEPT_ORGNIZATION").val(row.ACCEPT_ORGNIZATION);//受理单位
                    $("#INSPECTION_ENTERPRISE").combobox('select', row.INSPECTION_ENTERPRISE);//送检单位
                    $("#INSPECTION_ENTERPRISE_ADDRESS").val(row.INSPECTION_ENTERPRISE_ADDRESS);//送检单位地址
                    $("#INSPECTION_ENTERPRISE_POST").val(row.INSPECTION_ENTERPRISE_POST);//送检单位邮政编码
                    $("#CONTACTS").val(row.CONTACTS);//联系人
                    $("#CONTACT_PHONE").val(row.CONTACT_PHONE);//联系电话
                    $("#FAX").val(row.FAX);//传真
                    $("#CERTIFICATE_ENTERPRISE").combobox('select', row.CERTIFICATE_ENTERPRISE);//证书单位
                    $("#CERTIFICATE_ENTERPRISE_ADDRESS").val(row.CERTIFICATE_ENTERPRISE_ADDRESS);//证书单位地址
                    $("#CERTIFICATE_ENTERPRISE_POST").val(row.CERTIFICATE_ENTERPRISE_POST);//证书单位邮政编码
                    $("#CONTACTS2").val(row.CONTACTS2);//联系人2
                    $("#CONTACT_PHONE2").val(row.CONTACT_PHONE2);//联系电话2
                    $("#FAX2").val(row.FAX2);//传真2
                    $("#CUSTOMER_SPECIFIC_REQUIREMENTS").val(row.CUSTOMER_SPECIFIC_REQUIREMENTS);//客户特殊要求
                
            }
        })
    }
    $(function () {
        //$('#order').find(":text,:selected,select,:radio,textarea,:checked,:password").each(function () {
        //    $(this).attr("disabled", true);
        //});

        $('#ApplianceDate').edatagrid({
            singleSelect: false,
            toolbar: [
             {
                 text: '新增',
                 iconCls: 'icon-add',
                 handler: function () {
                     return flexiInsert();
                 }
             }, {
                 text: '复制新增',
                 iconCls: 'icon-add',
                 handler: function () {
                     return flexiInsertCopy();
                 }
             }, {
                 text: '删除',
                 iconCls: 'icon-remove',
                 handler: function () {
                     return flexiDelete();
                 }
             },
               {
                   text: '打印器具条形码',
                   iconCls: 'icon-add',
                   handler: function () {
                       return;
                   }
               },
               {
                   text: '委托单签名',
                   iconCls: 'icon-add',
                   handler: function () {
                       return;
                   }
               },
               {
                   text: '打印委托单',
                   iconCls: 'icon-add',
                   handler: function () {
                       return;
                   }
               },
               {
                   text: '发送实验室',
                   iconCls: 'icon-add',
                   handler: function () {
                       return flexiSave();
                   }
               }
            ],
            columns: [[
       { field: 'ORDER_TASK_INFORMATIONID', title: 'ORDER_TASK_INFORMATIONID', width: 64, hidden: true }
       , {
           field: 'APPLIANCE_NAME', title: '器具名称', width: 135, editor: {
               type: 'validatebox', options: {
                   precision: 1,
                   required: true,
                   missingMessage: '必填'
               }
           }
       }, {
           field: 'VERSION', title: '型号', width: 65, editor: {
               type: 'validatebox', options: {
                   required: true,
                   missingMessage: '必填'
               }
           }
       }, { field: 'FORMAT', title: '规格', width: 65, editor: 'text' },
       { field: 'FACTORY_NUM', title: '出厂编号', width: 65, editor: 'text' },
       {
           field: 'NUM', title: '数量', width: 35
                , editor: {
                    type: 'validatebox', options: {
                        required: true,
                        missingMessage: '必填'
                    }
                }

       }, { field: 'ATTACHMENT', title: '附件', width: 135, editor: 'text' }
           , {
               field: 'APPEARANCE_STATUS', title: '外观状态', width: 65, editor: {
                   type: 'validatebox', options: {
                       required: true,
                       missingMessage: '必填'
                   }
               }
           }


           , { field: 'MAKE_ORGANIZATION', title: '制造单位', width: 65, editor: 'text' }
              , {
                  field: 'UNDERTAKE_LABORATORYID', title: '承接实验室', width: 135, editor: {
                      type: 'combobox',
                      options: {
                          multiple: true,
                          data: [{ value: '@Common.LABORATORYNAME.电能.ToString()', text: '@Common.LABORATORYNAME.电能.ToString()' }, { value: '@Common.LABORATORYNAME.指示仪表.ToString()', text: '@Common.LABORATORYNAME.指示仪表.ToString()' },
                              { value: '@Common.LABORATORYNAME.数表单相.ToString()', text: '@Common.LABORATORYNAME.数表单相.ToString()' }, { value: '@Common.LABORATORYNAME.互感器.ToString()', text: '@Common.LABORATORYNAME.互感器.ToString()' }, { value: '@Common.LABORATORYNAME.数表三相.ToString()', text: '@Common.LABORATORYNAME.数表三相.ToString()' },{ value: '@Common.LABORATORYNAME.直流仪器.ToString()', text: '@Common.LABORATORYNAME.直流仪器.ToString()' }],
                          panelHeight: 'auto'
                      }
                  }
              }
           , {
               field: 'APPLIANCE_RECIVE', title: '器具接收', width: 65, editor: {
                   type: 'combobox', options: { data: [{ value: '是', text: '是' }, { value: '否', text: '否' }], panelHeight: 'auto' }
               }
           }
           , { field: 'REMARKS', title: '备注', width: 135, editor: 'text' }
            ]]
        });
        seng();
    });
</script>

